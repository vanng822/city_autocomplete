<html>
<head>
    <title> Search for cities! </title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="/static/css/bootstrap.min.css" rel="stylesheet" media="screen" />
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.css" />
    <link rel="stylesheet" href="http://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css" />
</head>
<body>
<div class="hero-unit">
	<div class="container">
	    <h1>Search for cities</h1>
	    <p>
	        <form class="navbar-search pull-left">
	            <input type="text" name="search_term" id="searchField" class="form-control " placeholder="Search">
	        </form>
	    </p>
	</div>
</div>
<div class="container">
	<div id="map" style="height: 600px; width: 600px;"></div>
</div>

<script src="http://code.jquery.com/jquery.js"></script>
<script src="/static/js/bootstrap.min.js"></script>
<script src="http://code.jquery.com/ui/1.10.3/jquery-ui.js"></script>
<script src="http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.js"></script>
<script>
var map;
var ajaxRequest;
var plotlist;
var plotlayers=[];
/*single marker*/
var marker = null;

function initmap() {
    // set up the map
    map = new L.Map('map');

    // create the tile layer with correct attribution
    var osmUrl='http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';
    var osmAttrib='Map data Â© OpenStreetMap contributors';
    var osm = new L.TileLayer(osmUrl, {maxZoom: 12, attribution: osmAttrib});

    // start the map in South-East England
    map.setView(new L.LatLng(51.3, 0.7), 5);
    map.addLayer(osm);
}

function addMarker(lat, lng, city, country) {
	if (marker) {
		map.removeLayer(marker);
	}
    marker = L.marker([lat, lng]).addTo(map);
    marker.bindPopup("<b>"+city+"</b><br>"+country).openPopup();
    map.panTo(new L.LatLng(lat, lng));
}

initmap();

</script>

<script>
  $(function() {
    $( "#searchField" ).autocomplete({
      source: function( request, response ) {
		    $.ajax({
		        url: "/search/",
		        dataType: "json",
		        data: {search_term: request.term},
		        success: function(data) {
		                response($.map(data.results, function(item) {
		                    return {
		                        label: item.payload.name + ', ' + countries[item.payload.country_code],
		                        payload : item.payload
		                   };
		            }));
		        }
		    });
		},
      minLength: 1,
      select: function( event, ui ) {
        //console.log(ui);
        var payload = ui.item.payload;
        addMarker(payload.latitude, payload.longitude, payload.name, countries[payload.country_code]);
      }
    });
  });
</script>
<script>
var countries = {{ countries }};
</script>
</body>
</html>
